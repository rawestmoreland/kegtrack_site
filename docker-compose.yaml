version: '3.1'

services:
    kegtrack:
        container_name: kegtrack_site
        image: rawestmoreland/kegtrack_site:prod
        restart: 'unless-stopped'
        ports:
            - '8080:80'
        networks:
            kegtrack_network:
                aliases:
                    - kegtrack

    strapi:
        container_name: strapi_kegtrack
        image: rawestmoreland/kegtrack_backend:dev
        environment:
            - DATABASE_CLIENT=postgres
            - DATABASE_HOST=postgres
            - DATABASE_PORT=5432
            - DATABASE_NAME=kegtrack
            - DATABASE_USERNAME=${DATABASE_USERNAME}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        ports:
            - 1338:1337
        volumes:
            - ./backend/app:/srv/app
        depends_on:
            - postgres
        networks:
            kegtrack_network:
                aliases:
                    - kegtrack

    postgres:
        container_name: postgres_kegtrack
        image: postgres:13.3
        restart: always
        volumes:
            - ./backend/db:/var/lib/postgresql/data
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - 5433:5432
        environment:
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: kegtrack
        networks:
            kegtrack_network:
                aliases:
                    - kegtrack

networks:
    kegtrack_network:
        name: kegtrack_network
